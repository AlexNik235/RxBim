<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:RxBim.Shared.Ui.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Assets/Colors.xaml"/>
        <ResourceDictionary Source="../Assets/Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- общий стиль TextBox -->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="{StaticResource GraphikLcg}"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxForeground}"/>
        <Setter Property="Padding" Value="12,8,12,4"/>
        <Setter Property="Margin" Value="4"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8">
                        <ScrollViewer x:Name="PART_ContentHost" 
                                      Background="Transparent"
                                      Padding="{TemplateBinding Padding}"/>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- стиль TextBox с текстом по-умолчанию -->
    <Style TargetType="{x:Type controls:TextBoxWithPlaceholder}"
           BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TextBoxWithPlaceholder}">
                    <Grid>
                        <TextBox Text="{Binding Text, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                 Background="{TemplateBinding Background}"
                                 BorderThickness="{TemplateBinding BorderThickness}"
                                 BorderBrush="{TemplateBinding BorderBrush}"
                                 Margin="0"/>
                        
                        <TextBlock Name="Placeholder"
                                   Style="{x:Null}"
                                   Text="{TemplateBinding Placeholder}"
                                   Foreground="{DynamicResource DisabledText}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   FontWeight="{TemplateBinding FontWeight}"
                                   FontStyle="Italic"
                                   IsHitTestVisible="False"
                                   Visibility="Hidden"
                                   HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Margin="{TemplateBinding Padding}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsKeyboardFocusWithin" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Placeholder"
                                    Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>