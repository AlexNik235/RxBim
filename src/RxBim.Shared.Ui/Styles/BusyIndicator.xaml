<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:controls="clr-namespace:RxBim.Shared.Ui.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Assets/Colors.xaml"/>
        
        <ResourceDictionary Source="../Assets/Converters.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="canvasStyle" 
           TargetType="{x:Type Canvas}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
    </Style>

    <Style x:Key ="rectangle" 
           TargetType="{x:Type Rectangle}">
        <Setter Property="Width" Value="2"/>
        <Setter Property="Height" Value="6"/>
        <Setter Property="Fill" Value="{DynamicResource BusyIndicatorSpinnerBackground}"/>
        <Setter Property="Canvas.Left" Value="9"/>
        <Setter Property="Canvas.Top" Value="0"/>
        <Setter Property="RadiusX" Value="1"/>
        <Setter Property="RadiusY" Value="1"/>
    </Style>
            
    <system:Double x:Key="RectCenterX">1</system:Double>
    <system:Double x:Key="RectCenterY">10</system:Double>
    
    <Style TargetType="{x:Type controls:BusyIndicator}"
           BasedOn="{StaticResource {x:Type ContentControl}}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:BusyIndicator}">
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Canvas Style="{StaticResource canvasStyle}"
                                Panel.ZIndex="1"
                                Visibility="{Binding IsBusy, RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                    Converter={StaticResource BooleanToVisibilityConverter}}"
                                HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Canvas Style="{StaticResource canvasStyle}">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="SpinnerRotate"  
                                                     CenterX="10" CenterY="10"/>
                                </Canvas.RenderTransform>
                                <Canvas.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SpinnerRotate" 
                                                                               Storyboard.TargetProperty="(RotateTransform.Angle)"
                                                                               RepeatBehavior="Forever">
                                                    <DiscreteDoubleKeyFrame Value="0" KeyTime="0:0:0" />
                                                    <DiscreteDoubleKeyFrame Value="45" KeyTime="0:0:0.125" />
                                                    <DiscreteDoubleKeyFrame Value="90" KeyTime="0:0:0.25" />
                                                    <DiscreteDoubleKeyFrame Value="135" KeyTime="0:0:0.375" />
                                                    <DiscreteDoubleKeyFrame Value="180" KeyTime="0:0:0.5" />
                                                    <DiscreteDoubleKeyFrame Value="225" KeyTime="0:0:0.625" />
                                                    <DiscreteDoubleKeyFrame Value="270" KeyTime="0:0:0.75" />
                                                    <DiscreteDoubleKeyFrame Value="315" KeyTime="0:0:0.875" />
                                                    <DiscreteDoubleKeyFrame Value="360" KeyTime="0:0:1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Canvas.Triggers>
            
                                <Rectangle Style="{StaticResource rectangle}"/>

                                <Rectangle Style="{StaticResource rectangle}"
                                           Opacity="0.84">
                                    <Rectangle.RenderTransform>
                                        <RotateTransform Angle="45" 
                                                         CenterX="{StaticResource RectCenterX}" CenterY="{StaticResource RectCenterY}"/>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
            
                                <Rectangle Style="{StaticResource rectangle}" 
                                           Opacity="0.76">
                                    <Rectangle.RenderTransform>
                                        <RotateTransform Angle="90"
                                                         CenterX="{StaticResource RectCenterX}" CenterY="{StaticResource RectCenterY}"/>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
            
                                <Rectangle Style="{StaticResource rectangle}" 
                                           Opacity="0.58">
                                    <Rectangle.RenderTransform>
                                        <RotateTransform Angle="135" 
                                                         CenterX="{StaticResource RectCenterX}" CenterY="{StaticResource RectCenterY}"/>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
            
                                <Rectangle Style="{StaticResource rectangle}" 
                                           Opacity="0.5">
                                    <Rectangle.RenderTransform>
                                        <RotateTransform Angle="180" 
                                                         CenterX="{StaticResource RectCenterX}" CenterY="{StaticResource RectCenterY}"/>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
            
                                <Rectangle Style="{StaticResource rectangle}" 
                                           Opacity="0.34">
                                    <Rectangle.RenderTransform>
                                        <RotateTransform Angle="225" 
                                                         CenterX="{StaticResource RectCenterX}" CenterY="{StaticResource RectCenterY}"/>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
            
                                <Rectangle Style="{StaticResource rectangle}" 
                                           Opacity="0.26">
                                    <Rectangle.RenderTransform>
                                        <RotateTransform Angle="270"
                                                         CenterX="{StaticResource RectCenterX}" CenterY="{StaticResource RectCenterY}"/>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
            
                                <Rectangle Style="{StaticResource rectangle}" 
                                           Opacity="0.08">
                                    <Rectangle.RenderTransform>
                                        <RotateTransform Angle="315" 
                                                         CenterX="{StaticResource RectCenterX}" CenterY="{StaticResource RectCenterY}"/>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Canvas>
                        </Canvas>
                        
                        <ContentPresenter IsEnabled="{Binding IsBusy, RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                            Converter={StaticResource BooleanInverseConverter}}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>